<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>组件库</title>
      <link href="/foreseed/ridered2.github.io/2023/04/13/zu-jian-ku/"/>
      <url>/foreseed/ridered2.github.io/2023/04/13/zu-jian-ku/</url>
      
        <content type="html"><![CDATA[<h3 id="一、组件安装"><a href="#一、组件安装" class="headerlink" title="一、组件安装"></a>一、组件安装</h3><pre class=" language-npm"><code class="language-npm">npm i element-ui -S</code></pre><h3 id="二、完整引入"><a href="#二、完整引入" class="headerlink" title="二、完整引入"></a>二、完整引入</h3><h5 id="在-main-js-中写入以下内容："><a href="#在-main-js-中写入以下内容：" class="headerlink" title="在 main.js 中写入以下内容："></a>在 main.js 中写入以下内容：</h5><pre class=" language-vue"><code class="language-vue">import Vue from 'vue';import ElementUI from 'element-ui';import 'element-ui/lib/theme-chalk/index.css';import App from './App.vue';Vue.use(ElementUI);new Vue(&#123;  el: '#app',  render: h => h(App)&#125;);</code></pre><h3 id="三、使用组件"><a href="#三、使用组件" class="headerlink" title="三、使用组件"></a>三、使用组件</h3><h5 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h5><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 实现表格 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>全选        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont iconbianhao1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>文章ID        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont iconbiaoti<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>文章标题        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont iconbiaoqian<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>文章标签        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont iconzuozhe<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>作者        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont iconcaozuojilu<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>操作        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 使用el-table组件 实现表格--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>articleList<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">40</span>px <span class="token number">0</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selection<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>全选<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>180<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>文章ID<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>180<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>文章标题<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>标签<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>作者<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>操作<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>edit(scope.$index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>编辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>del(scope.$index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">></span></span></code></pre><pre class=" language-html"><code class="language-html">      <span class="token comment" spellcheck="true">&lt;!-- 分页 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item, index) in totalPage<span class="token punctuation">"</span></span>        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page<span class="token punctuation">"</span></span>        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changePage(index)<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>item<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-pagination</span>        <span class="token attr-name">background</span>        <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prev, pager, next<span class="token punctuation">"</span></span>        <span class="token attr-name">:total</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span>        <span class="token attr-name">page-size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>        <span class="token attr-name">@current-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changePage<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-pagination</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法</title>
      <link href="/foreseed/ridered2.github.io/2023/04/09/suan-fa/"/>
      <url>/foreseed/ridered2.github.io/2023/04/09/suan-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><h5 id="创建一个函数，它接受两个或更多数组，并返回它们的对称差异数组。返回的数组必须只包含唯一值（没有重复项）。"><a href="#创建一个函数，它接受两个或更多数组，并返回它们的对称差异数组。返回的数组必须只包含唯一值（没有重复项）。" class="headerlink" title="创建一个函数，它接受两个或更多数组，并返回它们的对称差异数组。返回的数组必须只包含唯一值（没有重复项）。"></a>创建一个函数，它接受两个或更多数组，并返回它们的对称差异数组。返回的数组必须只包含唯一值（没有重复项）。</h5><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sym</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 将所有参数转换为集合，去除重复值</span>  <span class="token keyword">const</span> sets <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>arg <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 计算对称差并将结果保存在result中</span>  <span class="token keyword">let</span> result <span class="token operator">=</span> sets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sets<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> s <span class="token operator">=</span> sets<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>result<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>x <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>s<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>x <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 将结果转换为数组并返回</span>  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>result<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><h6 id="该函数使用了-rest-parameter-…args，它允许我们传入任意数量的数组。首先将所有参数转换为集合，然后使用-Set-和-Array-方法计算它们的对称差，并将结果存储在-result-变量中。最后，将结果转换为数组并返回。"><a href="#该函数使用了-rest-parameter-…args，它允许我们传入任意数量的数组。首先将所有参数转换为集合，然后使用-Set-和-Array-方法计算它们的对称差，并将结果存储在-result-变量中。最后，将结果转换为数组并返回。" class="headerlink" title="该函数使用了 rest parameter …args，它允许我们传入任意数量的数组。首先将所有参数转换为集合，然后使用 Set 和 Array 方法计算它们的对称差，并将结果存储在 result 变量中。最后，将结果转换为数组并返回。"></a>该函数使用了 rest parameter …args，它允许我们传入任意数量的数组。首先将所有参数转换为集合，然后使用 Set 和 Array 方法计算它们的对称差，并将结果存储在 result 变量中。最后，将结果转换为数组并返回。</h6><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><h5 id="编写一个函数updateInventory，比较并更新存储在二维数组中的库存与新库存的二维数组。更新现有库存项目的数量（在arr1中）。如果找不到该项，则将新的项目和数量添加到库存数组中。返回的库存数组应按项字母顺序排列。函数updateInventory应返回一个数组。"><a href="#编写一个函数updateInventory，比较并更新存储在二维数组中的库存与新库存的二维数组。更新现有库存项目的数量（在arr1中）。如果找不到该项，则将新的项目和数量添加到库存数组中。返回的库存数组应按项字母顺序排列。函数updateInventory应返回一个数组。" class="headerlink" title="编写一个函数updateInventory，比较并更新存储在二维数组中的库存与新库存的二维数组。更新现有库存项目的数量（在arr1中）。如果找不到该项，则将新的项目和数量添加到库存数组中。返回的库存数组应按项字母顺序排列。函数updateInventory应返回一个数组。"></a>编写一个函数updateInventory，比较并更新存储在二维数组中的库存与新库存的二维数组。更新现有库存项目的数量（在arr1中）。如果找不到该项，则将新的项目和数量添加到库存数组中。返回的库存数组应按项字母顺序排列。函数updateInventory应返回一个数组。</h5><h5 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h5><h6 id="首先将两个数组合并为一个数组，然后使用reduce函数对数组进行迭代，对每个元素进行处理："><a href="#首先将两个数组合并为一个数组，然后使用reduce函数对数组进行迭代，对每个元素进行处理：" class="headerlink" title="首先将两个数组合并为一个数组，然后使用reduce函数对数组进行迭代，对每个元素进行处理："></a>首先将两个数组合并为一个数组，然后使用reduce函数对数组进行迭代，对每个元素进行处理：</h6><h6 id="1-如果该项已存在于结果数组中，则增加其数量值。"><a href="#1-如果该项已存在于结果数组中，则增加其数量值。" class="headerlink" title="1.如果该项已存在于结果数组中，则增加其数量值。"></a>1.如果该项已存在于结果数组中，则增加其数量值。</h6><h6 id="2-如果不存在，则将新项目添加到结果数组中。"><a href="#2-如果不存在，则将新项目添加到结果数组中。" class="headerlink" title="2.如果不存在，则将新项目添加到结果数组中。"></a>2.如果不存在，则将新项目添加到结果数组中。</h6><h6 id="最后，使用sort函数按名称对数组进行排序，以获得按字母顺序排序的最终结果。"><a href="#最后，使用sort函数按名称对数组进行排序，以获得按字母顺序排序的最终结果。" class="headerlink" title="最后，使用sort函数按名称对数组进行排序，以获得按字母顺序排序的最终结果。"></a>最后，使用sort函数按名称对数组进行排序，以获得按字母顺序排序的最终结果。</h6><h5 id="实现代码如下："><a href="#实现代码如下：" class="headerlink" title="实现代码如下："></a>实现代码如下：</h5><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">updateInventory</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 将两个数组合并为一个数组</span>  <span class="token keyword">var</span> inventory <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 使用reduce函数对数组进行迭代，对每个元素进行处理</span>  <span class="token keyword">var</span> result <span class="token operator">=</span> inventory<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 获取该项目在结果数组中的索引</span>    <span class="token keyword">var</span> index <span class="token operator">=</span> acc<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> element<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果该项已存在于结果数组中，则增加其数量值</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      acc<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span><span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果不存在，则将新项目添加到结果数组中</span>    <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      acc<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> acc<span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 按名称对数组进行排序，以获得按字母顺序排序的最终结果</span>  result<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 测试</span><span class="token keyword">var</span> curInv <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"Bowling Ball"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Dirty Sock"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Hair Pin"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"Microphone"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> newInv <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Hair Pin"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"Half-Eaten Apple"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">67</span><span class="token punctuation">,</span> <span class="token string">"Bowling Ball"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">"Toothpaste"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">updateInventory</span><span class="token punctuation">(</span>curInv<span class="token punctuation">,</span> newInv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h6 id="输出结果为：-88-“Bowling-Ball”-2-“Dirty-Sock”-3-“Hair-Pin”-3-“Half-Eaten-Apple”-5-“Microphone”-7-“Toothpaste”-。"><a href="#输出结果为：-88-“Bowling-Ball”-2-“Dirty-Sock”-3-“Hair-Pin”-3-“Half-Eaten-Apple”-5-“Microphone”-7-“Toothpaste”-。" class="headerlink" title="输出结果为：[[88, “Bowling Ball”], [2, “Dirty Sock”], [3, “Hair Pin”], [3, “Half-Eaten Apple”], [5, “Microphone”], [7, “Toothpaste”]]。"></a>输出结果为：[[88, “Bowling Ball”], [2, “Dirty Sock”], [3, “Hair Pin”], [3, “Half-Eaten Apple”], [5, “Microphone”], [7, “Toothpaste”]]。</h6>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客挂载域名</title>
      <link href="/foreseed/ridered2.github.io/2023/04/08/bo-ke-gua-zai-yu-ming/"/>
      <url>/foreseed/ridered2.github.io/2023/04/08/bo-ke-gua-zai-yu-ming/</url>
      
        <content type="html"><![CDATA[<h3 id="自己的博客如何挂载域名"><a href="#自己的博客如何挂载域名" class="headerlink" title="自己的博客如何挂载域名"></a>自己的博客如何挂载域名</h3><h5 id="要挂载域名，您需要完成以下步骤："><a href="#要挂载域名，您需要完成以下步骤：" class="headerlink" title="要挂载域名，您需要完成以下步骤："></a>要挂载域名，您需要完成以下步骤：</h5><h6 id="1-购买一个域名并完成注册，在注册商处配置DNS服务器信息。"><a href="#1-购买一个域名并完成注册，在注册商处配置DNS服务器信息。" class="headerlink" title="1. 购买一个域名并完成注册，在注册商处配置DNS服务器信息。"></a>1. 购买一个域名并完成注册，在注册商处配置DNS服务器信息。</h6><h6 id="2-在您的博客平台（例如WordPress、Blogger等）中获得您的网站的IP地址。"><a href="#2-在您的博客平台（例如WordPress、Blogger等）中获得您的网站的IP地址。" class="headerlink" title="2. 在您的博客平台（例如WordPress、Blogger等）中获得您的网站的IP地址。"></a>2. 在您的博客平台（例如WordPress、Blogger等）中获得您的网站的IP地址。</h6><h6 id="3-在您的域名注册商处的DNS管理页面上，添加一个A记录指向您的网站IP地址。"><a href="#3-在您的域名注册商处的DNS管理页面上，添加一个A记录指向您的网站IP地址。" class="headerlink" title="3. 在您的域名注册商处的DNS管理页面上，添加一个A记录指向您的网站IP地址。"></a>3. 在您的域名注册商处的DNS管理页面上，添加一个A记录指向您的网站IP地址。</h6><h6 id="4-如果您打算使用电子邮件服务，请在DNS管理页面上添加MX记录。"><a href="#4-如果您打算使用电子邮件服务，请在DNS管理页面上添加MX记录。" class="headerlink" title="4. 如果您打算使用电子邮件服务，请在DNS管理页面上添加MX记录。"></a>4. 如果您打算使用电子邮件服务，请在DNS管理页面上添加MX记录。</h6><h6 id="5-在博客平台上，更新您的网站设置，以反映您的新域名。"><a href="#5-在博客平台上，更新您的网站设置，以反映您的新域名。" class="headerlink" title="5. 在博客平台上，更新您的网站设置，以反映您的新域名。"></a>5. 在博客平台上，更新您的网站设置，以反映您的新域名。</h6><h6 id="6-等待DNS记录的更新，这可能需要几个小时或更多时间，具体取决于您的域名注册商和互联网服务提供商。"><a href="#6-等待DNS记录的更新，这可能需要几个小时或更多时间，具体取决于您的域名注册商和互联网服务提供商。" class="headerlink" title="6. 等待DNS记录的更新，这可能需要几个小时或更多时间，具体取决于您的域名注册商和互联网服务提供商。"></a>6. 等待DNS记录的更新，这可能需要几个小时或更多时间，具体取决于您的域名注册商和互联网服务提供商。</h6><h6 id="完成以上步骤后，您的博客将与您的新域名连通。如果您遇到任何问题，您可以向您的域名注册商或博客平台寻求帮助。"><a href="#完成以上步骤后，您的博客将与您的新域名连通。如果您遇到任何问题，您可以向您的域名注册商或博客平台寻求帮助。" class="headerlink" title="完成以上步骤后，您的博客将与您的新域名连通。如果您遇到任何问题，您可以向您的域名注册商或博客平台寻求帮助。"></a>完成以上步骤后，您的博客将与您的新域名连通。如果您遇到任何问题，您可以向您的域名注册商或博客平台寻求帮助。</h6><h6 id="如何注册商处配置DNS服务器信息，我购买的腾讯云的"><a href="#如何注册商处配置DNS服务器信息，我购买的腾讯云的" class="headerlink" title="如何注册商处配置DNS服务器信息，我购买的腾讯云的"></a>如何注册商处配置DNS服务器信息，我购买的腾讯云的</h6><h6 id="如果您的域名是在腾讯云上注册的，您可以按照以下步骤配置DNS服务器信息："><a href="#如果您的域名是在腾讯云上注册的，您可以按照以下步骤配置DNS服务器信息：" class="headerlink" title="如果您的域名是在腾讯云上注册的，您可以按照以下步骤配置DNS服务器信息："></a>如果您的域名是在腾讯云上注册的，您可以按照以下步骤配置DNS服务器信息：</h6><h6 id="1-登录腾讯云官网，在控制台中打开云解析-DNSPod-页面。"><a href="#1-登录腾讯云官网，在控制台中打开云解析-DNSPod-页面。" class="headerlink" title="1. 登录腾讯云官网，在控制台中打开云解析(DNSPod)页面。"></a>1. 登录腾讯云官网，在控制台中打开云解析(DNSPod)页面。</h6><h6 id="2-在云解析-DNSPod-页面中，点击左侧菜单栏中的“域名列表”进入域名管理页。"><a href="#2-在云解析-DNSPod-页面中，点击左侧菜单栏中的“域名列表”进入域名管理页。" class="headerlink" title="2. 在云解析(DNSPod)页面中，点击左侧菜单栏中的“域名列表”进入域名管理页。"></a>2. 在云解析(DNSPod)页面中，点击左侧菜单栏中的“域名列表”进入域名管理页。</h6><h6 id="3-在域名管理页面，找到您要挂载的域名，点击该域名的“管理”按钮。"><a href="#3-在域名管理页面，找到您要挂载的域名，点击该域名的“管理”按钮。" class="headerlink" title="3. 在域名管理页面，找到您要挂载的域名，点击该域名的“管理”按钮。"></a>3. 在域名管理页面，找到您要挂载的域名，点击该域名的“管理”按钮。</h6><h6 id="4-在弹出的窗口中，选择“域名信息”选项卡，然后在页面下方找到“DNS服务器列表”并单击“修改”按钮。"><a href="#4-在弹出的窗口中，选择“域名信息”选项卡，然后在页面下方找到“DNS服务器列表”并单击“修改”按钮。" class="headerlink" title="4. 在弹出的窗口中，选择“域名信息”选项卡，然后在页面下方找到“DNS服务器列表”并单击“修改”按钮。"></a>4. 在弹出的窗口中，选择“域名信息”选项卡，然后在页面下方找到“DNS服务器列表”并单击“修改”按钮。</h6><h6 id="5-在弹出的窗口中，填写您的DNS服务器信息。如果您使用的是外部DNS服务器，请选择“自定义”选项卡，然后添加您的DNS服务器信息。"><a href="#5-在弹出的窗口中，填写您的DNS服务器信息。如果您使用的是外部DNS服务器，请选择“自定义”选项卡，然后添加您的DNS服务器信息。" class="headerlink" title="5. 在弹出的窗口中，填写您的DNS服务器信息。如果您使用的是外部DNS服务器，请选择“自定义”选项卡，然后添加您的DNS服务器信息。"></a>5. 在弹出的窗口中，填写您的DNS服务器信息。如果您使用的是外部DNS服务器，请选择“自定义”选项卡，然后添加您的DNS服务器信息。</h6><h6 id="6-点击“确定”保存您的修改并退出。"><a href="#6-点击“确定”保存您的修改并退出。" class="headerlink" title="6. 点击“确定”保存您的修改并退出。"></a>6. 点击“确定”保存您的修改并退出。</h6><h6 id="一旦您完成了上述步骤，您的域名将使用您指定的DNS服务器，并在几小时内生效。如果您遇到任何问题，请向腾讯云客服寻求帮助。"><a href="#一旦您完成了上述步骤，您的域名将使用您指定的DNS服务器，并在几小时内生效。如果您遇到任何问题，请向腾讯云客服寻求帮助。" class="headerlink" title="一旦您完成了上述步骤，您的域名将使用您指定的DNS服务器，并在几小时内生效。如果您遇到任何问题，请向腾讯云客服寻求帮助。"></a>一旦您完成了上述步骤，您的域名将使用您指定的DNS服务器，并在几小时内生效。如果您遇到任何问题，请向腾讯云客服寻求帮助。</h6>]]></content>
      
      
      
        <tags>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极限笔记</title>
      <link href="/foreseed/ridered2.github.io/2023/04/03/ji-xian/"/>
      <url>/foreseed/ridered2.github.io/2023/04/03/ji-xian/</url>
      
        <content type="html"><![CDATA[<h2 id="极限部分"><a href="#极限部分" class="headerlink" title="极限部分"></a>极限部分</h2><h3 id="1-认识极限"><a href="#1-认识极限" class="headerlink" title="1.认识极限"></a>1.认识极限</h3><h6 id="极限式如-lim-n-rightarrow-infty-f-x-，含义是：当x向某个值（或无穷远处）处靠近时，f-x-向哪个值靠近。"><a href="#极限式如-lim-n-rightarrow-infty-f-x-，含义是：当x向某个值（或无穷远处）处靠近时，f-x-向哪个值靠近。" class="headerlink" title="极限式如$\lim_{n\rightarrow+\infty}f(x)$ ，含义是：当x向某个值（或无穷远处）处靠近时，f(x)向哪个值靠近。"></a>极限式如$\lim_{n\rightarrow+\infty}f(x)$ ，含义是：当x向某个值（或无穷远处）处靠近时，f(x)向哪个值靠近。</h6><h6 id="怎样理解极限"><a href="#怎样理解极限" class="headerlink" title="怎样理解极限"></a>怎样理解极限</h6><h6 id="极限过程是一个动态的过程，不是一个“死”的数字。而至于-lim-符号，是解算出接近的目标。要体会x–-gt-a和x-a之间的区别。并且，x–-gt-a-时，-x-a-是无穷小的，所以我们研究时大部分时候都是在和“无穷小”以及“无穷大”打交道。"><a href="#极限过程是一个动态的过程，不是一个“死”的数字。而至于-lim-符号，是解算出接近的目标。要体会x–-gt-a和x-a之间的区别。并且，x–-gt-a-时，-x-a-是无穷小的，所以我们研究时大部分时候都是在和“无穷小”以及“无穷大”打交道。" class="headerlink" title="极限过程是一个动态的过程，不是一个“死”的数字。而至于$\lim$符号，是解算出接近的目标。要体会x–&gt;a和x = a之间的区别。并且，x–&gt;a 时，(x-a) 是无穷小的，所以我们研究时大部分时候都是在和“无穷小”以及“无穷大”打交道。"></a>极限过程是一个动态的过程，不是一个“死”的数字。而至于$\lim$符号，是解算出接近的目标。要体会x–&gt;a和x = a之间的区别。并且，x–&gt;a 时，(x-a) 是无穷小的，所以我们研究时大部分时候都是在和“无穷小”以及“无穷大”打交道。</h6><h3 id="2-求函数极限"><a href="#2-求函数极限" class="headerlink" title="2.求函数极限"></a>2.求函数极限</h3><h6 id="第一步，代入：将自变量极限值代入极限表达式，如果不能得到结果，继续下一步；"><a href="#第一步，代入：将自变量极限值代入极限表达式，如果不能得到结果，继续下一步；" class="headerlink" title="第一步，代入：将自变量极限值代入极限表达式，如果不能得到结果，继续下一步；"></a>第一步，代入：将自变量极限值代入极限表达式，如果不能得到结果，继续下一步；</h6><h6 id="第二步，分类：判断极限类型属于-frac-0-0-、-frac-infty-infty-、-1-infty-、-infty-–-infty-、-0-times-infty-、-infty-0-中的哪一种，重点是识别出式中的无穷小和无穷大成分；"><a href="#第二步，分类：判断极限类型属于-frac-0-0-、-frac-infty-infty-、-1-infty-、-infty-–-infty-、-0-times-infty-、-infty-0-中的哪一种，重点是识别出式中的无穷小和无穷大成分；" class="headerlink" title="第二步，分类：判断极限类型属于 $\frac{0}{0}$ 、$\frac{\infty}{\infty}$ 、$1^\infty $、$\infty –\infty $、$ 0\times\infty$、$\infty^0$ 中的哪一种，重点是识别出式中的无穷小和无穷大成分；"></a>第二步，分类：判断极限类型属于 $\frac{0}{0}$ 、$\frac{\infty}{\infty}$ 、$1^\infty $、$\infty –\infty $、$ 0\times\infty$、$\infty^0$ 中的哪一种，重点是识别出式中的无穷小和无穷大成分；</h6><h6 id="第三步，求解：根据极限类型，选择分别适用的求解方法，进行化简或者变形"><a href="#第三步，求解：根据极限类型，选择分别适用的求解方法，进行化简或者变形" class="headerlink" title="第三步，求解：根据极限类型，选择分别适用的求解方法，进行化简或者变形"></a>第三步，求解：根据极限类型，选择分别适用的求解方法，进行化简或者变形</h6><h5 id="代入时，需要注意三点问题："><a href="#代入时，需要注意三点问题：" class="headerlink" title="代入时，需要注意三点问题："></a>代入时，需要注意三点问题：</h5><h6 id="①-frac-1-infty-0-frac-1-0-infty-无穷大与无穷小之间呈倒数关系；"><a href="#①-frac-1-infty-0-frac-1-0-infty-无穷大与无穷小之间呈倒数关系；" class="headerlink" title="①$\frac{1}{\infty}$=0,$ \frac{1}{0}=\infty$无穷大与无穷小之间呈倒数关系；"></a>①$\frac{1}{\infty}$=0,$ \frac{1}{0}=\infty$无穷大与无穷小之间呈倒数关系；</h6><h6 id="②无穷小-times-有界函数-无穷小"><a href="#②无穷小-times-有界函数-无穷小" class="headerlink" title="②无穷小$\times$有界函数=无穷小."></a>②无穷小$\times$有界函数=无穷小.</h6><h6 id="③需要注意极限的方向性问题，区分”x–-gt-infty-”-”x–-gt-infty-”"><a href="#③需要注意极限的方向性问题，区分”x–-gt-infty-”-”x–-gt-infty-”" class="headerlink" title="③需要注意极限的方向性问题，区分”x–&gt;+$\infty$”,”x–&gt;-$\infty$”"></a>③需要注意极限的方向性问题，区分”x–&gt;+$\infty$”,”x–&gt;-$\infty$”</h6><h3 id="3-方法总结"><a href="#3-方法总结" class="headerlink" title="3.方法总结"></a>3.方法总结</h3><h6 id="对于无穷小相关的极限，我们可采用的方法有："><a href="#对于无穷小相关的极限，我们可采用的方法有：" class="headerlink" title="对于无穷小相关的极限，我们可采用的方法有："></a>对于无穷小相关的极限，我们可采用的方法有：</h6><h6 id="（1）化简：消除“致-0-因子”"><a href="#（1）化简：消除“致-0-因子”" class="headerlink" title="（1）化简：消除“致 0 因子”"></a>（1）化简：消除“致 0 因子”</h6><h6 id="（2）等价无穷小代换"><a href="#（2）等价无穷小代换" class="headerlink" title="（2）等价无穷小代换"></a>（2）等价无穷小代换</h6><h6 id="（3）洛必达法则。"><a href="#（3）洛必达法则。" class="headerlink" title="（3）洛必达法则。"></a>（3）洛必达法则。</h6><h6 id="常用的等价无穷小代换：当-时，下列表格中右侧的无穷小量可以用左侧的替换"><a href="#常用的等价无穷小代换：当-时，下列表格中右侧的无穷小量可以用左侧的替换" class="headerlink" title="常用的等价无穷小代换：当 时，下列表格中右侧的无穷小量可以用左侧的替换"></a>常用的等价无穷小代换：当 时，下列表格中右侧的无穷小量可以用左侧的替换</h6><table><thead><tr><th>x</th><th>sinx tanx arcsinx  arctanx ln(1+x) e*x - 1</th></tr></thead><tbody><tr><td>ax</td><td>[(1+x)*a -1]</td></tr><tr><td>x*2/2</td><td>1-cosx</td></tr></tbody></table><h6 id="Tips：函数f-x-如果过原点，即-f-0-0，而且导数有f’-0-a-，则在-x–-gt-0时，-可以和-f-x-等价无穷小代换。"><a href="#Tips：函数f-x-如果过原点，即-f-0-0，而且导数有f’-0-a-，则在-x–-gt-0时，-可以和-f-x-等价无穷小代换。" class="headerlink" title="Tips：函数f(x) 如果过原点，即 f(0)=0，而且导数有f’(0)=a ，则在 x–&gt;0时， 可以和 f(x)等价无穷小代换。"></a>Tips：函数f(x) 如果过原点，即 f(0)=0，而且导数有f’(0)=a ，则在 x–&gt;0时， 可以和 f(x)等价无穷小代换。</h6><h5 id="使用等价无穷小代换时，需要关注以下三个细节："><a href="#使用等价无穷小代换时，需要关注以下三个细节：" class="headerlink" title="使用等价无穷小代换时，需要关注以下三个细节："></a>使用等价无穷小代换时，需要关注以下三个细节：</h5><h6 id="（1）无穷小才能换！"><a href="#（1）无穷小才能换！" class="headerlink" title="（1）无穷小才能换！"></a>（1）无穷小才能换！</h6><h6 id="（2）要学会“抓住”无穷小，如果x–-gt-0-，则相应的-ax也是无穷小。如果x–a-a-not-0-，此时就要从式子中凑出-x-a-这个量"><a href="#（2）要学会“抓住”无穷小，如果x–-gt-0-，则相应的-ax也是无穷小。如果x–a-a-not-0-，此时就要从式子中凑出-x-a-这个量" class="headerlink" title="（2）要学会“抓住”无穷小，如果x–&gt;0 ，则相应的 ax也是无穷小。如果x–a(a$\not ={0}$) ，此时就要从式子中凑出 (x-a)这个量"></a>（2）要学会“抓住”无穷小，如果x–&gt;0 ，则相应的 ax也是无穷小。如果x–a(a$\not ={0}$) ，此时就要从式子中凑出 (x-a)这个量</h6><h6 id="（3）两个无穷小量相加减时，不可将其中任意一个部分进行代换"><a href="#（3）两个无穷小量相加减时，不可将其中任意一个部分进行代换" class="headerlink" title="（3）两个无穷小量相加减时，不可将其中任意一个部分进行代换"></a>（3）两个无穷小量相加减时，不可将其中任意一个部分进行代换</h6><h5 id="使用洛必达方法，请注意其使用条件："><a href="#使用洛必达方法，请注意其使用条件：" class="headerlink" title="使用洛必达方法，请注意其使用条件："></a>使用洛必达方法，请注意其使用条件：</h5><h6 id="（1）必须只能在-frac-0-0-或者-frac-infty-infty-型的极限中使用；"><a href="#（1）必须只能在-frac-0-0-或者-frac-infty-infty-型的极限中使用；" class="headerlink" title="（1）必须只能在 $\frac{0}{0}或者 $\frac{\infty}{\infty}$型的极限中使用；"></a>（1）必须只能在 $\frac{0}{0}或者 $\frac{\infty}{\infty}$型的极限中使用；</h6><h6 id="（2）分子分母的函数必须有连续的导数"><a href="#（2）分子分母的函数必须有连续的导数" class="headerlink" title="（2）分子分母的函数必须有连续的导数"></a>（2）分子分母的函数必须有连续的导数</h6><h5 id="解决无穷大类型问题的方法：“抓大头”的思想理念，抓住主要矛盾，忽略次要成分："><a href="#解决无穷大类型问题的方法：“抓大头”的思想理念，抓住主要矛盾，忽略次要成分：" class="headerlink" title="解决无穷大类型问题的方法：“抓大头”的思想理念，抓住主要矛盾，忽略次要成分："></a>解决无穷大类型问题的方法：“抓大头”的思想理念，抓住主要矛盾，忽略次要成分：</h5><h6 id="ln-x-lt-lt-x-a-lt-lt-x-b-lt-lt-c-x-lt-lt-d-x-lt-lt-x-lt-lt-x-x-x–-gt-infty-0-lt-a-lt-b-1-lt-c-lt-d"><a href="#ln-x-lt-lt-x-a-lt-lt-x-b-lt-lt-c-x-lt-lt-d-x-lt-lt-x-lt-lt-x-x-x–-gt-infty-0-lt-a-lt-b-1-lt-c-lt-d" class="headerlink" title="$ln$x &lt;&lt; $x^a$ &lt;&lt; $x^b$ &lt;&lt; $c^x$ &lt;&lt; $d^x$ &lt;&lt; $x!$ &lt;&lt; $x^x$(x–&gt;$\infty$,0&lt;a&lt;b,1&lt;c&lt;d,)."></a>$ln$x &lt;&lt; $x^a$ &lt;&lt; $x^b$ &lt;&lt; $c^x$ &lt;&lt; $d^x$ &lt;&lt; $x!$ &lt;&lt; $x^x$(x–&gt;$\infty$,0&lt;a&lt;b,1&lt;c&lt;d,).</h6><h6 id="当两个相差无穷倍的量相进行加减时，这时候我们眼里可以忽略相对较小的一个量。在具体操作上，应该将最大的成分提括号外，分子分母同时除掉即可。"><a href="#当两个相差无穷倍的量相进行加减时，这时候我们眼里可以忽略相对较小的一个量。在具体操作上，应该将最大的成分提括号外，分子分母同时除掉即可。" class="headerlink" title="当两个相差无穷倍的量相进行加减时，这时候我们眼里可以忽略相对较小的一个量。在具体操作上，应该将最大的成分提括号外，分子分母同时除掉即可。"></a>当两个相差无穷倍的量相进行加减时，这时候我们眼里可以忽略相对较小的一个量。在具体操作上，应该将最大的成分提括号外，分子分母同时除掉即可。</h6><h3 id="4-极限运算法则"><a href="#4-极限运算法则" class="headerlink" title="4.极限运算法则"></a>4.极限运算法则</h3><h6 id="如果极限-存在，则："><a href="#如果极限-存在，则：" class="headerlink" title="如果极限 存在，则："></a>如果极限 存在，则：</h6><h6 id="lim-u-pm-v-lim-u-pm-lim-v"><a href="#lim-u-pm-v-lim-u-pm-lim-v" class="headerlink" title="$lim(u \pm v)= lim u \pm lim v$"></a>$lim(u \pm v)= lim u \pm lim v$</h6><h6 id="lim-u-times-v-lim-u-times-lim-v"><a href="#lim-u-times-v-lim-u-times-lim-v" class="headerlink" title="$lim(u \times v)= lim u \times lim v$"></a>$lim(u \times v)= lim u \times lim v$</h6><h6 id="lim-frac-u-v-frac-lim-u-lim-v"><a href="#lim-frac-u-v-frac-lim-u-lim-v" class="headerlink" title="$lim\frac{u}{v} = \frac{lim u}{lim v}$"></a>$lim\frac{u}{v} = \frac{lim u}{lim v}$</h6><h6 id="在处理极限的时候，我们可以选择将极限进行部分地运算"><a href="#在处理极限的时候，我们可以选择将极限进行部分地运算" class="headerlink" title="在处理极限的时候，我们可以选择将极限进行部分地运算"></a>在处理极限的时候，我们可以选择将极限进行部分地运算</h6><h2 id="函数的连续性与间断点判断"><a href="#函数的连续性与间断点判断" class="headerlink" title="函数的连续性与间断点判断"></a>函数的连续性与间断点判断</h2><h6 id="函数连续性应满足条件：-lim-x-rightarrow-a-f-x-f-a-（着重体会x–-gt-a-和-x-a的区别）该条件意味着函数图像应该是一条连续的线条，不会有断点。我们接触到的函数，断点往往会出现在这两种地方：分段函数的分界点、函数定义域的边界。"><a href="#函数连续性应满足条件：-lim-x-rightarrow-a-f-x-f-a-（着重体会x–-gt-a-和-x-a的区别）该条件意味着函数图像应该是一条连续的线条，不会有断点。我们接触到的函数，断点往往会出现在这两种地方：分段函数的分界点、函数定义域的边界。" class="headerlink" title="函数连续性应满足条件：$\lim_{x\rightarrow a}f(x)=f(a)$  .（着重体会x–&gt;a 和 x=a的区别）该条件意味着函数图像应该是一条连续的线条，不会有断点。我们接触到的函数，断点往往会出现在这两种地方：分段函数的分界点、函数定义域的边界。"></a>函数连续性应满足条件：$\lim_{x\rightarrow a}f(x)=f(a)$  .（着重体会x–&gt;a 和 x=a的区别）该条件意味着函数图像应该是一条连续的线条，不会有断点。我们接触到的函数，断点往往会出现在这两种地方：分段函数的分界点、函数定义域的边界。</h6>]]></content>
      
      
      
        <tags>
            
            <tag> 高数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词</title>
      <link href="/foreseed/ridered2.github.io/2023/03/16/ying-yu-dan-ci/"/>
      <url>/foreseed/ridered2.github.io/2023/03/16/ying-yu-dan-ci/</url>
      
        <content type="html"><![CDATA[<h2 id="一-词根-van-ven-vent-come-go-来，走来"><a href="#一-词根-van-ven-vent-come-go-来，走来" class="headerlink" title="一.词根 -van,-ven,-vent = come,go 来，走来"></a>一.词根 -van,-ven,-vent = come,go 来，走来</h2><h3 id="advent-n-8282"><a href="#advent-n-8282" class="headerlink" title="advent n. 8282"></a>advent n. 8282</h3><h5 id="助记：ad-to-vent-来临，出现-–-gt-走过来，走来了–-gt-来临，出现"><a href="#助记：ad-to-vent-来临，出现-–-gt-走过来，走来了–-gt-来临，出现" class="headerlink" title="助记：ad(=to) + vent(来临，出现)–&gt;走过来，走来了–&gt;来临，出现"></a>助记：ad(=to) + vent(来临，出现)–&gt;走过来，走来了–&gt;来临，出现</h5><h3 id="convene-v-7956"><a href="#convene-v-7956" class="headerlink" title="convene v. 7956"></a>convene v. 7956</h3><h5 id="助记：con-共同，一起-ven-come-来-e-–-gt-来到一起-–-gt-集合，召集"><a href="#助记：con-共同，一起-ven-come-来-e-–-gt-来到一起-–-gt-集合，召集" class="headerlink" title="助记：con(共同，一起) + ven(=come: 来) + e –&gt;来到一起 –&gt;集合，召集"></a>助记：con(共同，一起) + ven(=come: 来) + e –&gt;来到一起 –&gt;集合，召集</h5><h3 id="convention-n-2492"><a href="#convention-n-2492" class="headerlink" title="convention n. 2492"></a>convention n. 2492</h3><h5 id="助记：con-共同，一起-vent-come-来-ion-–-gt-来到一起-–-gt-开会"><a href="#助记：con-共同，一起-vent-come-来-ion-–-gt-来到一起-–-gt-开会" class="headerlink" title="助记：con(共同，一起) + vent(=come: 来) + ion –&gt;来到一起 –&gt;开会"></a>助记：con(共同，一起) + vent(=come: 来) + ion –&gt;来到一起 –&gt;开会</h5><h3 id="conventional-agj-2576"><a href="#conventional-agj-2576" class="headerlink" title="conventional agj. 2576"></a>conventional agj. 2576</h3><h5 id="搭配：conventional-values-传统价值观"><a href="#搭配：conventional-values-传统价值观" class="headerlink" title="搭配：conventional values 传统价值观"></a>搭配：conventional values 传统价值观</h5><h5 id="conwventional-lanes-常规车道"><a href="#conwventional-lanes-常规车道" class="headerlink" title="conwventional lanes 常规车道"></a>conwventional lanes 常规车道</h5><h3 id="convenient-adj-5438"><a href="#convenient-adj-5438" class="headerlink" title="convenient adj. 5438"></a>convenient adj. 5438</h3><h5 id="助记：-con-vent-come-来-i-ent-–-gt-靠走就能走到-–-gt-方便的"><a href="#助记：-con-vent-come-来-i-ent-–-gt-靠走就能走到-–-gt-方便的" class="headerlink" title="助记： con + vent(=come: 来) + i + ent –&gt; 靠走就能走到 –&gt;方便的"></a>助记： con + vent(=come: 来) + i + ent –&gt; 靠走就能走到 –&gt;方便的</h5><h3 id="prevent-v-1087"><a href="#prevent-v-1087" class="headerlink" title="prevent v. 1087"></a>prevent v. 1087</h3><h5 id="助记：pre-提前，先-vent-来-–-gt-先来（演变）一遍-–-gt-预防"><a href="#助记：pre-提前，先-vent-来-–-gt-先来（演变）一遍-–-gt-预防" class="headerlink" title="助记：pre(提前，先) + vent(来) –&gt; 先来（演变）一遍 –&gt; 预防"></a>助记：pre(提前，先) + vent(来) –&gt; 先来（演变）一遍 –&gt; 预防</h5><h3 id="intervene-v-5117"><a href="#intervene-v-5117" class="headerlink" title="intervene v. 5117"></a>intervene v. 5117</h3><h5 id="助记：inter（-between-之间）-ven-来-e-–-gt-来到两者之间-–-gt-干预，干涉"><a href="#助记：inter（-between-之间）-ven-来-e-–-gt-来到两者之间-–-gt-干预，干涉" class="headerlink" title="助记：inter（=between:之间）+ven(来) + e –&gt;来到两者之间 –&gt;干预，干涉"></a>助记：inter（=between:之间）+ven(来) + e –&gt;来到两者之间 –&gt;干预，干涉</h5><h3 id="interfere-v-4532"><a href="#interfere-v-4532" class="headerlink" title="interfere v. 4532"></a>interfere v. 4532</h3><h5 id="助记：inter-之间，另外在刻意模仿单词：enter-进入-fer-ven-来-e-–-gt-来到两者之间-–-gt-干涉，干预（与intervene意思类似；f-v-音相似，n-l音似）f-v读音相似，可以转换的例证：life-–-gt-live-give-–-gt-gift-礼物"><a href="#助记：inter-之间，另外在刻意模仿单词：enter-进入-fer-ven-来-e-–-gt-来到两者之间-–-gt-干涉，干预（与intervene意思类似；f-v-音相似，n-l音似）f-v读音相似，可以转换的例证：life-–-gt-live-give-–-gt-gift-礼物" class="headerlink" title="助记：inter(之间，另外在刻意模仿单词：enter:进入) + fer(ven:来) + e –&gt;来到两者之间 –&gt; 干涉，干预（与intervene意思类似；f,v 音相似，n,l音似）f,v读音相似，可以转换的例证：life –&gt;live;give –&gt;gift:礼物"></a>助记：inter(之间，另外在刻意模仿单词：enter:进入) + fer(ven:来) + e –&gt;来到两者之间 –&gt; 干涉，干预（与intervene意思类似；f,v 音相似，n,l音似）f,v读音相似，可以转换的例证：life –&gt;live;give –&gt;gift:礼物</h5><h3 id="revenue-n-1691"><a href="#revenue-n-1691" class="headerlink" title="revenue n. 1691"></a>revenue n. 1691</h3><h5 id="助记：re-回-ven（-come：-来）-ue-名词后缀-–-gt-回来的钱-–-gt-收入"><a href="#助记：re-回-ven（-come：-来）-ue-名词后缀-–-gt-回来的钱-–-gt-收入" class="headerlink" title="助记：re(回) + ven（=come： 来）+ ue (名词后缀) –&gt; 回来的钱 –&gt; 收入"></a>助记：re(回) + ven（=come： 来）+ ue (名词后缀) –&gt; 回来的钱 –&gt; 收入</h5><h3 id="event-n-事件；结果-526"><a href="#event-n-事件；结果-526" class="headerlink" title="event n.事件；结果 526"></a>event n.事件；结果 526</h3><h3 id="eventual-adj-最终的-7419"><a href="#eventual-adj-最终的-7419" class="headerlink" title="eventual adj. 最终的 7419"></a>eventual adj. 最终的 7419</h3><h3 id="eventually-adv-最终-1110"><a href="#eventually-adv-最终-1110" class="headerlink" title="eventually adv.最终 1110"></a>eventually adv.最终 1110</h3><h3 id="advance-n-v-2316"><a href="#advance-n-v-2316" class="headerlink" title="advance n/v. 2316"></a>advance n/v. 2316</h3><h5 id="助记：ad-to-vanc-vant-来；另外-，-anc还有“前”的意思-e-–-gt-来到前面-–-gt-提前"><a href="#助记：ad-to-vanc-vant-来；另外-，-anc还有“前”的意思-e-–-gt-来到前面-–-gt-提前" class="headerlink" title="助记：ad(=to) + vanc(vant: 来；另外 ， -anc还有“前”的意思) + e –&gt;来到前面 –&gt; 提前"></a>助记：ad(=to) + vanc(vant: 来；另外 ， -anc还有“前”的意思) + e –&gt;来到前面 –&gt; 提前</h5><h3 id="advanced-adj-高级的，先进的-2824"><a href="#advanced-adj-高级的，先进的-2824" class="headerlink" title="advanced adj. 高级的，先进的 2824"></a>advanced adj. 高级的，先进的 2824</h3><h5 id="搭配：advanced-medical-technologies-先进的医学技术"><a href="#搭配：advanced-medical-technologies-先进的医学技术" class="headerlink" title="搭配：advanced medical technologies 先进的医学技术"></a>搭配：advanced medical technologies 先进的医学技术</h5><h3 id="advencement-n-前进，进步，提升-6733"><a href="#advencement-n-前进，进步，提升-6733" class="headerlink" title="advencement n.前进，进步，提升 6733"></a>advencement n.前进，进步，提升 6733</h3><h2 id="二-al表示-“other”-外"><a href="#二-al表示-“other”-外" class="headerlink" title="二. -al表示 “other” :外"></a>二. -al表示 “other” :外</h2><h3 id="alien-adj-4016"><a href="#alien-adj-4016" class="headerlink" title="alien adj. 4016"></a>alien adj. 4016</h3><h5 id="助记：al-外-ien-名词后缀-—-gt-外国的；异乡的；"><a href="#助记：al-外-ien-名词后缀-—-gt-外国的；异乡的；" class="headerlink" title="助记：al(外) + ien(名词后缀) —-&gt;外国的；异乡的；"></a>助记：al(外) + ien(名词后缀) —-&gt;外国的；异乡的；</h5><h5 id="搭配：be-alien-to-sb-对某人是陌生的"><a href="#搭配：be-alien-to-sb-对某人是陌生的" class="headerlink" title="搭配：be alien to sb: 对某人是陌生的"></a>搭配：be alien to sb: 对某人是陌生的</h5><h3 id="allergy-n-7343"><a href="#allergy-n-7343" class="headerlink" title="allergy n. 7343"></a>allergy n. 7343</h3><h5 id="助记：all-外-erg-act-活动-y-后缀-—–-gt-皮肤-外面的活动-—-gt-过敏"><a href="#助记：all-外-erg-act-活动-y-后缀-—–-gt-皮肤-外面的活动-—-gt-过敏" class="headerlink" title="助记：all(外) + erg(=act:活动) + y(后缀)—–&gt;(皮肤)外面的活动 —-&gt; 过敏"></a>助记：all(外) + erg(=act:活动) + y(后缀)—–&gt;(皮肤)外面的活动 —-&gt; 过敏</h5><h5 id="allergic-adj-9339-对…敏感的"><a href="#allergic-adj-9339-对…敏感的" class="headerlink" title="allergic adj. 9339 对…敏感的"></a>allergic adj. 9339 对…敏感的</h5><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h2 id="三-词根-tain-hold-表示持有，维持；保留，保存；拿着，拥有的含义"><a href="#三-词根-tain-hold-表示持有，维持；保留，保存；拿着，拥有的含义" class="headerlink" title="三.词根-tain=(hold)表示持有，维持；保留，保存；拿着，拥有的含义"></a>三.词根-tain=(hold)表示持有，维持；保留，保存；拿着，拥有的含义</h2><h3 id="hold-v-持有，获得；保存-826"><a href="#hold-v-持有，获得；保存-826" class="headerlink" title="hold v. 持有，获得；保存 826"></a>hold v. 持有，获得；保存 826</h3><h3 id="maintain-v-925"><a href="#maintain-v-925" class="headerlink" title="maintain v. 925"></a>maintain v. 925</h3><h5 id="助记：main-man-手-tain-hold-维持；拿着-–-gt-拿在手里-维持在手里-–-gt-维持；维修"><a href="#助记：main-man-手-tain-hold-维持；拿着-–-gt-拿在手里-维持在手里-–-gt-维持；维修" class="headerlink" title="助记：main(=-man:手) + tain(=hold:维持；拿着) –&gt;拿在手里/维持在手里 –&gt; 维持；维修"></a>助记：main(=-man:手) + tain(=hold:维持；拿着) –&gt;拿在手里/维持在手里 –&gt; 维持；维修</h5><h3 id="maintainance-n-3091"><a href="#maintainance-n-3091" class="headerlink" title="maintainance n. 3091"></a>maintainance n. 3091</h3><h5 id="助记：-maintain-维修，维持-ance-名词后缀-–-gt-维护，维修"><a href="#助记：-maintain-维修，维持-ance-名词后缀-–-gt-维护，维修" class="headerlink" title="助记：(=maintain:维修，维持)+ance(名词后缀) –&gt; 维护，维修"></a>助记：(=maintain:维修，维持)+ance(名词后缀) –&gt; 维护，维修</h5><h3 id="sustain-v-3011"><a href="#sustain-v-3011" class="headerlink" title="sustain v. 3011"></a>sustain v. 3011</h3><h5 id="助记：sus-sub-从下往上-tain-hold-维持，持续-–-gt-支撑"><a href="#助记：sus-sub-从下往上-tain-hold-维持，持续-–-gt-支撑" class="headerlink" title="助记：sus(=sub:从下往上) + tain(=hold:维持，持续)–&gt;支撑"></a>助记：sus(=sub:从下往上) + tain(=hold:维持，持续)–&gt;支撑</h5>]]></content>
      
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas Series创建</title>
      <link href="/foreseed/ridered2.github.io/2023/03/16/pandas-series/"/>
      <url>/foreseed/ridered2.github.io/2023/03/16/pandas-series/</url>
      
        <content type="html"><![CDATA[<h2 id="pandas-Series创建"><a href="#pandas-Series创建" class="headerlink" title="pandas Series创建"></a>pandas Series创建</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span> DataFrame</code></pre><pre class=" language-python"><code class="language-python">obj <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>obj</code></pre><pre><code>0    41    72    83   -1dtype: int64</code></pre><h3 id="指定索引值"><a href="#指定索引值" class="headerlink" title="指定索引值"></a>指定索引值</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 指定索引值</span>obj1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>obj1</code></pre><pre><code>a    1b    2c    3d    4dtype: int64</code></pre><h3 id="通过字典的形式创建Series数据"><a href="#通过字典的形式创建Series数据" class="headerlink" title="通过字典的形式创建Series数据"></a>通过字典的形式创建Series数据</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 通过字典的形式创建Series数据</span><span class="token comment" spellcheck="true"># S中的索引就是原来字典中的键</span>data1 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"city": "shenzhen", "age": 25, "number": 123456&amp;#125;</span>obj2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>data1<span class="token punctuation">)</span>obj2</code></pre><pre><code>city      shenzhenage             25number      123456dtype: object</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 通过自己创建的索引来获取数据</span>obj1<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><pre><code>a    1c    3b    2dtype: int64</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 默认数值索引来获取数据</span>obj1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span></code></pre><pre><code>a    1b    2c    3dtype: int64</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 布尔型数组过滤掉不满足要求的数据</span>obj1<span class="token punctuation">[</span>obj1 <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">]</span></code></pre><pre><code>b    2c    3d    4dtype: int64</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 上面的obj1</span>obj1</code></pre><pre><code>a    1b    2c    3d    4dtype: int64</code></pre><pre class=" language-python"><code class="language-python">obj1<span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">]</span></code></pre><pre><code>2</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 通过切片形式，包含末端，和Python1不同</span>obj1<span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">:</span><span class="token string">"c"</span><span class="token punctuation">]</span></code></pre><pre><code>a    1b    2c    3dtype: int64</code></pre><pre class=" language-python"><code class="language-python">obj1<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><pre><code>b    2a    1d    4dtype: int64</code></pre><pre class=" language-python"><code class="language-python">obj1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span></code></pre><pre><code>b    2c    3d    4dtype: int64</code></pre><pre class=" language-python"><code class="language-python">obj1<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><pre><code>b    2d    4dtype: int64</code></pre><pre class=" language-python"><code class="language-python">obj1<span class="token punctuation">[</span>obj1 <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">]</span></code></pre><pre><code>c    3d    4dtype: int64</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 上面的obj2</span>obj2</code></pre><pre><code>city      shenzhenage             25number      123456dtype: object</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># sex对应的值找不到，用NaN表示</span>data2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"sex"</span><span class="token punctuation">,</span> <span class="token string">"city"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token string">"number"</span><span class="token punctuation">]</span>obj3 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>obj2<span class="token punctuation">,</span> index<span class="token operator">=</span>data2<span class="token punctuation">)</span>obj3</code></pre><pre><code>sex            NaNcity      shenzhenage             25number      123456dtype: object</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 检查缺失值</span>pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>obj3<span class="token punctuation">)</span></code></pre><pre><code>sex        Truecity      Falseage       Falsenumber    Falsedtype: bool</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Series的实例方法isnull和notnull</span>obj3<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre><code>sex        Truecity      Falseage       Falsenumber    Falsedtype: bool</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># S的name属性</span>obj3<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"person"</span><span class="token comment" spellcheck="true"># S索引的name属性</span>obj3<span class="token punctuation">.</span>index<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"information"</span>obj3</code></pre><pre><code>informationsex            NaNcity      shenzhenage             25number      123456Name: person, dtype: object</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 上面栗子中的number修改为phone_num</span>obj3<span class="token punctuation">.</span>index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"sex"</span><span class="token punctuation">,</span> <span class="token string">"city"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token string">"phone_num"</span><span class="token punctuation">]</span>obj3</code></pre><pre><code>sex               NaNcity         shenzhenage                25phone_num      123456Name: person, dtype: object</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 1.通过传入等长列表或者Numpy数组组成的字典</span>data <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'state': ['Ohio', 'Ohio', 'Ohio', 'Nevada', 'Nevada', 'Nevada'],</span>        <span class="token string">'year'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">2001</span><span class="token punctuation">,</span> <span class="token number">2002</span><span class="token punctuation">,</span> <span class="token number">2001</span><span class="token punctuation">,</span> <span class="token number">2002</span><span class="token punctuation">,</span> <span class="token number">2003</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'pop'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token number">1.7</span><span class="token punctuation">,</span> <span class="token number">3.6</span><span class="token punctuation">,</span> <span class="token number">2.4</span><span class="token punctuation">,</span> <span class="token number">2.9</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>frame</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>state</th>      <th>year</th>      <th>pop</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Ohio</td>      <td>2000</td>      <td>1.5</td>    </tr>    <tr>      <th>1</th>      <td>Ohio</td>      <td>2001</td>      <td>1.7</td>    </tr>    <tr>      <th>2</th>      <td>Ohio</td>      <td>2002</td>      <td>3.6</td>    </tr>    <tr>      <th>3</th>      <td>Nevada</td>      <td>2001</td>      <td>2.4</td>    </tr>    <tr>      <th>4</th>      <td>Nevada</td>      <td>2002</td>      <td>2.9</td>    </tr>    <tr>      <th>5</th>      <td>Nevada</td>      <td>2003</td>      <td>3.2</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 2. 指定列序列创建，通过columns参数</span><span class="token comment" spellcheck="true"># 结果中3个列属性和上面的顺序不同</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"year"</span><span class="token punctuation">,</span> <span class="token string">"state"</span><span class="token punctuation">,</span> <span class="token string">"pop"</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>year</th>      <th>state</th>      <th>pop</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2000</td>      <td>Ohio</td>      <td>1.5</td>    </tr>    <tr>      <th>1</th>      <td>2001</td>      <td>Ohio</td>      <td>1.7</td>    </tr>    <tr>      <th>2</th>      <td>2002</td>      <td>Ohio</td>      <td>3.6</td>    </tr>    <tr>      <th>3</th>      <td>2001</td>      <td>Nevada</td>      <td>2.4</td>    </tr>    <tr>      <th>4</th>      <td>2002</td>      <td>Nevada</td>      <td>2.9</td>    </tr>    <tr>      <th>5</th>      <td>2003</td>      <td>Nevada</td>      <td>3.2</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 3、columns中的属性如果不存在，则结果中用缺失值代替，debt属性</span><span class="token comment" spellcheck="true"># 4、在DF中传入指定的index，有one-six</span>frame2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"year"</span><span class="token punctuation">,</span> <span class="token string">"state"</span><span class="token punctuation">,</span> <span class="token string">"pop"</span><span class="token punctuation">,</span> <span class="token string">"debt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                      index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"one"</span><span class="token punctuation">,</span> <span class="token string">"two"</span><span class="token punctuation">,</span> <span class="token string">"three"</span><span class="token punctuation">,</span> <span class="token string">"four"</span><span class="token punctuation">,</span> <span class="token string">"five"</span><span class="token punctuation">,</span> <span class="token string">"six"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>frame2</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>year</th>      <th>state</th>      <th>pop</th>      <th>debt</th>    </tr>  </thead>  <tbody>    <tr>      <th>one</th>      <td>2000</td>      <td>Ohio</td>      <td>1.5</td>      <td>NaN</td>    </tr>    <tr>      <th>two</th>      <td>2001</td>      <td>Ohio</td>      <td>1.7</td>      <td>NaN</td>    </tr>    <tr>      <th>three</th>      <td>2002</td>      <td>Ohio</td>      <td>3.6</td>      <td>NaN</td>    </tr>    <tr>      <th>four</th>      <td>2001</td>      <td>Nevada</td>      <td>2.4</td>      <td>NaN</td>    </tr>    <tr>      <th>five</th>      <td>2002</td>      <td>Nevada</td>      <td>2.9</td>      <td>NaN</td>    </tr>    <tr>      <th>six</th>      <td>2003</td>      <td>Nevada</td>      <td>3.2</td>      <td>NaN</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 1、获取DF中的列属性和索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>frame2<span class="token punctuation">.</span>columns<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frame2<span class="token punctuation">.</span>index<span class="token punctuation">)</span></code></pre><pre><code>Index([&#39;year&#39;, &#39;state&#39;, &#39;pop&#39;, &#39;debt&#39;], dtype=&#39;object&#39;)Index([&#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;], dtype=&#39;object&#39;)</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 2、查看values</span>frame2<span class="token punctuation">.</span>values</code></pre><pre><code>array([[2000, &#39;Ohio&#39;, 1.5, nan],       [2001, &#39;Ohio&#39;, 1.7, nan],       [2002, &#39;Ohio&#39;, 3.6, nan],       [2001, &#39;Nevada&#39;, 2.4, nan],       [2002, &#39;Nevada&#39;, 2.9, nan],       [2003, &#39;Nevada&#39;, 3.2, nan]], dtype=object)</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 3、查看列数据</span>frame2<span class="token punctuation">.</span>year</code></pre><pre><code>one      2000two      2001three    2002four     2001five     2002six      2003Name: year, dtype: int64</code></pre><pre class=" language-python"><code class="language-python">frame2<span class="token punctuation">[</span><span class="token string">"year"</span><span class="token punctuation">]</span></code></pre><pre><code>one      2000two      2001three    2002four     2001five     2002six      2003Name: year, dtype: int64</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 4、赋值修改列</span><span class="token comment" spellcheck="true"># 注意是整列的修改</span>frame2<span class="token punctuation">[</span><span class="token string">"debt"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">18</span>frame2</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>year</th>      <th>state</th>      <th>pop</th>      <th>debt</th>    </tr>  </thead>  <tbody>    <tr>      <th>one</th>      <td>2000</td>      <td>Ohio</td>      <td>1.5</td>      <td>18</td>    </tr>    <tr>      <th>two</th>      <td>2001</td>      <td>Ohio</td>      <td>1.7</td>      <td>18</td>    </tr>    <tr>      <th>three</th>      <td>2002</td>      <td>Ohio</td>      <td>3.6</td>      <td>18</td>    </tr>    <tr>      <th>four</th>      <td>2001</td>      <td>Nevada</td>      <td>2.4</td>      <td>18</td>    </tr>    <tr>      <th>five</th>      <td>2002</td>      <td>Nevada</td>      <td>2.9</td>      <td>18</td>    </tr>    <tr>      <th>six</th>      <td>2003</td>      <td>Nevada</td>      <td>3.2</td>      <td>18</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 传入numpy数据</span>frame2<span class="token punctuation">[</span><span class="token string">"debt"</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">6.0</span><span class="token punctuation">)</span>frame2</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>year</th>      <th>state</th>      <th>pop</th>      <th>debt</th>    </tr>  </thead>  <tbody>    <tr>      <th>one</th>      <td>2000</td>      <td>Ohio</td>      <td>1.5</td>      <td>0.0</td>    </tr>    <tr>      <th>two</th>      <td>2001</td>      <td>Ohio</td>      <td>1.7</td>      <td>1.0</td>    </tr>    <tr>      <th>three</th>      <td>2002</td>      <td>Ohio</td>      <td>3.6</td>      <td>2.0</td>    </tr>    <tr>      <th>four</th>      <td>2001</td>      <td>Nevada</td>      <td>2.4</td>      <td>3.0</td>    </tr>    <tr>      <th>five</th>      <td>2002</td>      <td>Nevada</td>      <td>2.9</td>      <td>4.0</td>    </tr>    <tr>      <th>six</th>      <td>2003</td>      <td>Nevada</td>      <td>3.2</td>      <td>5.0</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 传入S型数据</span>val <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">1.9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"one"</span><span class="token punctuation">,</span> <span class="token string">"three"</span><span class="token punctuation">,</span> <span class="token string">"five"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>frame2<span class="token punctuation">[</span><span class="token string">"debt"</span><span class="token punctuation">]</span> <span class="token operator">=</span> valframe2</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>year</th>      <th>state</th>      <th>pop</th>      <th>debt</th>    </tr>  </thead>  <tbody>    <tr>      <th>one</th>      <td>2000</td>      <td>Ohio</td>      <td>1.5</td>      <td>1.2</td>    </tr>    <tr>      <th>two</th>      <td>2001</td>      <td>Ohio</td>      <td>1.7</td>      <td>NaN</td>    </tr>    <tr>      <th>three</th>      <td>2002</td>      <td>Ohio</td>      <td>3.6</td>      <td>1.9</td>    </tr>    <tr>      <th>four</th>      <td>2001</td>      <td>Nevada</td>      <td>2.4</td>      <td>NaN</td>    </tr>    <tr>      <th>five</th>      <td>2002</td>      <td>Nevada</td>      <td>2.9</td>      <td>2.0</td>    </tr>    <tr>      <th>six</th>      <td>2003</td>      <td>Nevada</td>      <td>3.2</td>      <td>NaN</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 1、2</span><span class="token comment" spellcheck="true"># 先判断state属性的值是否为Ohio</span><span class="token comment" spellcheck="true"># 如果等于，将eastern属性的值设为T，否则为F</span><span class="token comment" spellcheck="true"># eastern属性是新建的，只能通过字典标记的形式</span>frame2<span class="token punctuation">[</span><span class="token string">"eastern"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>frame2<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token string">"Ohio"</span><span class="token punctuation">)</span>frame2</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>year</th>      <th>state</th>      <th>pop</th>      <th>debt</th>      <th>eastern</th>    </tr>  </thead>  <tbody>    <tr>      <th>one</th>      <td>2000</td>      <td>Ohio</td>      <td>1.5</td>      <td>1.2</td>      <td>True</td>    </tr>    <tr>      <th>two</th>      <td>2001</td>      <td>Ohio</td>      <td>1.7</td>      <td>NaN</td>      <td>True</td>    </tr>    <tr>      <th>three</th>      <td>2002</td>      <td>Ohio</td>      <td>3.6</td>      <td>1.9</td>      <td>True</td>    </tr>    <tr>      <th>four</th>      <td>2001</td>      <td>Nevada</td>      <td>2.4</td>      <td>NaN</td>      <td>False</td>    </tr>    <tr>      <th>five</th>      <td>2002</td>      <td>Nevada</td>      <td>2.9</td>      <td>2.0</td>      <td>False</td>    </tr>    <tr>      <th>six</th>      <td>2003</td>      <td>Nevada</td>      <td>3.2</td>      <td>NaN</td>      <td>False</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 3 删除数据</span><span class="token keyword">del</span> frame2<span class="token punctuation">[</span><span class="token string">"eastern"</span><span class="token punctuation">]</span>frame2</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>year</th>      <th>state</th>      <th>pop</th>      <th>debt</th>    </tr>  </thead>  <tbody>    <tr>      <th>one</th>      <td>2000</td>      <td>Ohio</td>      <td>1.5</td>      <td>1.2</td>    </tr>    <tr>      <th>two</th>      <td>2001</td>      <td>Ohio</td>      <td>1.7</td>      <td>NaN</td>    </tr>    <tr>      <th>three</th>      <td>2002</td>      <td>Ohio</td>      <td>3.6</td>      <td>1.9</td>    </tr>    <tr>      <th>four</th>      <td>2001</td>      <td>Nevada</td>      <td>2.4</td>      <td>NaN</td>    </tr>    <tr>      <th>five</th>      <td>2002</td>      <td>Nevada</td>      <td>2.9</td>      <td>2.0</td>    </tr>    <tr>      <th>six</th>      <td>2003</td>      <td>Nevada</td>      <td>3.2</td>      <td>NaN</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python">frame2<span class="token punctuation">[</span><span class="token string">"pop"</span><span class="token punctuation">]</span></code></pre><pre><code>one      1.5two      1.7three    3.6four     2.4five     2.9six      3.2Name: pop, dtype: float64</code></pre><pre class=" language-python"><code class="language-python">frame2<span class="token punctuation">.</span>pop</code></pre><pre><code>&lt;bound method DataFrame.pop of        year   state  pop  debtone    2000    Ohio  1.5   1.2two    2001    Ohio  1.7   NaNthree  2002    Ohio  3.6   1.9four   2001  Nevada  2.4   NaNfive   2002  Nevada  2.9   2.0six    2003  Nevada  3.2   NaN&gt;</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 4  嵌套字典创建DF：外层为列属性，内层为行</span>pop <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'Nevada': &amp;#123;2001: 2.4, 2002: 2.9&amp;#125;,</span>       <span class="token string">'Ohio'</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;2000: 1.5, 2001: 1.7, 2002: 3.6&amp;#125;&amp;#125;</span>frame3 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>pop<span class="token punctuation">)</span>frame3</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Nevada</th>      <th>Ohio</th>    </tr>  </thead>  <tbody>    <tr>      <th>2001</th>      <td>2.4</td>      <td>1.7</td>    </tr>    <tr>      <th>2002</th>      <td>2.9</td>      <td>3.6</td>    </tr>    <tr>      <th>2000</th>      <td>NaN</td>      <td>1.5</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 5、转置操作</span>frame3<span class="token punctuation">.</span>T</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2001</th>      <th>2002</th>      <th>2000</th>    </tr>  </thead>  <tbody>    <tr>      <th>Nevada</th>      <td>2.4</td>      <td>2.9</td>      <td>NaN</td>    </tr>    <tr>      <th>Ohio</th>      <td>1.7</td>      <td>3.6</td>      <td>1.5</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 6 、DF中传入S型数据</span>pdata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'Ohio': frame3['Ohio'][:-1],</span>         <span class="token string">'Nevada'</span><span class="token punctuation">:</span> frame3<span class="token punctuation">[</span><span class="token string">'Nevada'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>pdata<span class="token punctuation">)</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Ohio</th>      <th>Nevada</th>    </tr>  </thead>  <tbody>    <tr>      <th>2001</th>      <td>1.7</td>      <td>2.4</td>    </tr>    <tr>      <th>2002</th>      <td>3.6</td>      <td>2.9</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取DF中的所有数据</span>frame2<span class="token punctuation">.</span>values</code></pre><pre><code>array([[2000, &#39;Ohio&#39;, 1.5, 1.2],       [2001, &#39;Ohio&#39;, 1.7, nan],       [2002, &#39;Ohio&#39;, 3.6, 1.9],       [2001, &#39;Nevada&#39;, 2.4, nan],       [2002, &#39;Nevada&#39;, 2.9, 2.0],       [2003, &#39;Nevada&#39;, 3.2, nan]], dtype=object)</code></pre><pre class=" language-python"><code class="language-python"></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/foreseed/ridered2.github.io/2023/03/16/hello-world/"/>
      <url>/foreseed/ridered2.github.io/2023/03/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
